{"version":3,"sources":["shared/components/UIElements/Card.js","shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js"],"names":["Card","props","className","style","children","Map","mapRef","useRef","center","zoom","useEffect","map","window","google","maps","current","Marker","position","ref","PlaceItem","authCtx","useContext","AuthContext","useState","showMap","setShowMap","showConfirmModal","setShowConfirmModal","useHttpClient","isLoading","error","sendRequest","clearError","history","useHistory","closeMapHandler","cancelDeleteHandler","Fragment","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","coordinates","inverse","danger","a","process","id","Authorization","token","onDelete","deletePlace","push","userId","LoadingSpinner","src","image","alt","title","description","isLoggedIn","creatorId","to","PlaceList","items","length","place","key","creator","location","onDeletePlace","UserPlaces","useParams","loadedPlaces","setLoadedPlaces","responseData","places","fetchPlaces","deletedPlaceId","prevPlaces","filter"],"mappings":"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","file":"static/js/7.554bc8b9.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useRef, useEffect } from \"react\";\r\n\r\nimport \"./Map.css\";\r\n\r\nconst Map = props => {\r\n    const mapRef = useRef();\r\n\r\n    const { center, zoom } = props;\r\n\r\n    useEffect(() => {\r\n        const map = new window.google.maps.Map(mapRef.current,{\r\n            center: center,\r\n            zoom: zoom\r\n        });\r\n    \r\n        new window.google.maps.Marker({position: center, map: map});\r\n    },[center,zoom]);\r\n    \r\n\r\n    return <div ref={mapRef} className={`map ${props.className}`} style={props.style}></div>\r\n};\r\n\r\nexport default Map;","import React, { useState, useContext } from \"react\";\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Modal from \"../../shared/components/UIElements/Modal\";\r\nimport Map from \"../../shared/components/UIElements/Map\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./PlaceItem.css\";\r\n\r\nconst PlaceItem = (props) => {\r\n  const authCtx = useContext(AuthContext);\r\n  const [showMap, setShowMap] = useState(false);\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const history = useHistory();\r\n\r\n  const openMapHandler = () => setShowMap(true);\r\n\r\n  const closeMapHandler = () => setShowMap(false);\r\n\r\n  const showDeleteWarningHandler = () => {\r\n    setShowConfirmModal(true);\r\n  };\r\n\r\n  const cancelDeleteHandler = () => {\r\n    setShowConfirmModal(false);\r\n  };\r\n\r\n  const confirmDeleteHandler = () => {\r\n    setShowConfirmModal(false);\r\n\r\n    const deletePlace = async () => {\r\n      try {\r\n        await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/places/${props.id}`,\r\n          \"DELETE\",\r\n          null,\r\n          { Authorization: \"Bearer \" + authCtx.token }\r\n        );\r\n        props.onDelete(props.id);\r\n      } catch (err) {}\r\n    };\r\n\r\n    deletePlace();\r\n    history.push(`/${authCtx.userId}/places`);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n\r\n      <Modal\r\n        show={showMap}\r\n        onCancel={closeMapHandler}\r\n        header={props.address}\r\n        contentClass=\"place-item__modal_content\"\r\n        footerClass=\"place-item__modal_actions\"\r\n        footer={<Button onClick={closeMapHandler}>Close</Button>}\r\n      >\r\n        <div className=\"map-container\">\r\n          <Map center={props.coordinates} zoom={16} />\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        show={showConfirmModal}\r\n        onCancel={cancelDeleteHandler}\r\n        header=\"Are you sure?\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={\r\n          <React.Fragment>\r\n            <Button inverse onClick={cancelDeleteHandler}>\r\n              CANCEL\r\n            </Button>\r\n            <Button danger onClick={confirmDeleteHandler}>\r\n              DELETE\r\n            </Button>\r\n          </React.Fragment>\r\n        }\r\n      >\r\n        <p>Dp ypu want to proceed and delete this place?</p>\r\n      </Modal>\r\n      <li className=\"place-item\">\r\n        <Card className=\"place-item__content\">\r\n          {isLoading && (\r\n            <div className=\"center\">\r\n              <LoadingSpinner />\r\n            </div>\r\n          )}\r\n          <div className=\"place-item__image\">\r\n            <img src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt={props.title} />\r\n          </div>\r\n          <div className=\"place-item__info\">\r\n            <h2>{props.title}</h2>\r\n            <h3>{props.address}</h3>\r\n            <p>{props.description}</p>\r\n          </div>\r\n          <div className=\"place-item__actions\">\r\n            <Button inverse onClick={openMapHandler}>\r\n              VIEW ON MAP\r\n            </Button>\r\n            {authCtx.isLoggedIn && authCtx.userId === props.creatorId && (\r\n              <Button to={`/places/${props.id}`}>EDIT</Button>\r\n            )}\r\n            {authCtx.isLoggedIn && authCtx.userId === props.creatorId && (\r\n              <Button danger onClick={showDeleteWarningHandler}>\r\n                DELETE\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PlaceItem;\r\n","import React from \"react\";\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport PlaceItem from \"./PlaceItem\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\n\r\nimport \"./PlaceList.css\";\r\n\r\nconst PlaceList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"place-list center\">\r\n        <Card>\r\n          <h2>No place found maybe crate one</h2>\r\n          <Button to=\"/places/new\">Share Place</Button>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className=\"place-list\">\r\n      {props.items.map((place) => (\r\n        <PlaceItem\r\n          key={place.id}\r\n          id={place.id}\r\n          image={place.image}\r\n          title={place.title}\r\n          description={place.description}\r\n          address={place.address}\r\n          creatorId={place.creator}\r\n          coordinates={place.location}\r\n          onDelete={props.onDeletePlace}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default PlaceList;\r\n","import React, { useState, Fragment, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport PlaceList from \"../components/PlaceList\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nconst UserPlaces = () => {\r\n  const userId = useParams().userId;\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [loadedPlaces, setLoadedPlaces] = useState([]);\r\n\r\n  useEffect(() => {\r\n    \r\n      const fetchPlaces = async () => {\r\n        try{\r\n          const responseData = await sendRequest(\r\n            `${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`\r\n          );\r\n  \r\n          setLoadedPlaces(responseData.places);\r\n        }catch(err){}\r\n       \r\n      };\r\n\r\n      fetchPlaces();\r\n    \r\n  }, [sendRequest, userId]);\r\n\r\n  const placeDeletedHandler = (deletedPlaceId) => {\r\n    setLoadedPlaces(prevPlaces => prevPlaces.filter(place=> place.id !== deletedPlaceId))\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedPlaces && <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler}/>}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UserPlaces;\r\n"],"sourceRoot":""}